
#user massagenow;
#Defines which Linux system user will own and run the Nginx server
worker_processes 1;
#Referes to single threaded process. Generally set to be equal to the number of CPUs or cores.
#error_log  logs/error.log; #error_log  logs/error.log  notice;
#Specifies the file where server logs.
#pid        logs/nginx.pid;
#nginx will write its master process ID(PID).
events {
  worker_connections 1024;
  # worker_processes and worker_connections allows you to calculate maxclients value:
  # max_clients = worker_processes * worker_connections
}

http {
  include mime.types;
  # anything written in /opt/nginx/conf/mime.types is interpreted as if written inside the http { } block
  default_type application/octet-stream;
  #
  #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  #                  '$status $body_bytes_sent "$http_referer" '
  #                  '"$http_user_agent" "$http_x_forwarded_for"';
  #access_log  logs/access.log  main;
  sendfile on;
  # If serving locally stored static files, sendfile is essential to speed up the server,
  # But if using as reverse proxy one can deactivate it

  #tcp_nopush     on;
  # works opposite to tcp_nodelay. Instead of optimizing delays, it optimizes the amount of data sent at once.
  #keepalive_timeout  0;
  keepalive_timeout 65;
  # timeout during which a keep-alive client connection will stay open.
  # tells the server to use on-the-fly gzip compression.
  gzip on;
  gzip_types text/plain text/css application/json application/x-javascript application/javascript text/xml application/xml application/rss+xml text/javascript image/svg+xml application/vnd.ms-fontobject application/x-font-ttf font/opentype; gzip_disable "MSIE [1-6]\.";

  server {
    listen 80;
    server_name app.massagenow321.com;
    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    # redirect http to https
    location / {
      return 301 https://app.massagenow321.com$request_uri;
    }
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name app.massagenow321.com;

    # ssl certifcate and private key location
    ssl_certificate /etc/letsencrypt/live/app.massagenow321.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/app.massagenow321.com/privkey.pem;

    # enable session resumption to improve https performance
    # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # enables server-side protection from BEAST attacks
    # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
    ssl_prefer_server_ciphers on;

    # enable TLS 1.2 and 1.3 for better security
    # https://www.cloudflare.com/learning-resources/tls-1-3/
    ssl_protocols TLSv1.2 TLSv1.3;

    # ciphers chosen for forward secrecy and compatibility
    ssl_ciphers TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:TLS_AES_128_CCM_8_SHA256:TLS_AES_128_CCM_SHA256:ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;

    # enable ocsp stapling (mechanism by which a site can convey certificate revocation information to visitors in a privacy-preserving, scalable manner)
    # http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/
    ssl_stapling on;
    ssl_stapling_verify on;

    # config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
    # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
    # also https://hstspreload.org/
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

    # static file location to serve app
    location / {
      root /usr/share/nginx/html;
      index index.html index.htm;
      try_files $uri $uri/ /index.html =404;
    }
  }

}